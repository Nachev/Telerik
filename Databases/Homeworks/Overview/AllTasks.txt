1.What database models do you know?
 - Hierarchical  (tree)
 - Network / graph
 - Relational (table)
 - Object-oriented
 
2.Which are the main functions performed by a Relational Database Management System (RDBMS)?
 - Creating / altering / deleting tables and relationships between them (database schema)
 - Adding, changing, deleting, searching and retrieving of data stored in the tables
 - Support for the SQL language
 - Transaction management (optional)
 
3.Define what is "table" in database terms.
 - data, arranged in rows and columns
 - all rows have the same structure
 - columns have name and type

4.Explain the difference between a primary and a foreign key.
 - Primary key is a column of the table that uniquely identifies its rows (usually its is a number)
 - The foreign key is an identifier of a record located in another table (usually its primary key)

5.Explain the different kinds of relationships between tables in relational databases.
 - One-to-many – one table entry to many table entries
 - Many-to-many – many table entries to many table entries
 - One-to-one – one table entry to one table entry

6.When is a certain database schema normalized? What are the advantages of normalized databases?
 - When there are no repetitions in the entries in one schema.

7.What are database integrity constraints and when are they used?
 - Integrity constraints ensure data integrity in the database tables - Enforce data rules which cannot be violated

8.Point out the pros and cons of using indexes in a database.
 + Speed up searching of values in a certain column or group of columns.
 - Adding and deleting records in indexed tables is slower! That's why indices should be used for big tables only.
 
9.What's the main purpose of the SQL language?
 - Creating, altering, deleting tables and other objects in the database
 - Searching, retrieving, inserting, modifying and deleting table data (rows)

10.What are transactions used for? Give an example.
 - Transactions are a sequence of database operations which are executed as a single unit:
  * Either all of them execute successfully
  * Or none of them is executed at all
 Example:
  A bank transfer from one account into another (withdrawal + deposit)
  If either the withdrawal or the deposit fails the entire operation should be cancelled
  
11.What is a NoSQL database?
 - Databases without relations between the entries.

12.Explain the classical non-relational data models.
 - Document model
  * Set of documents, e.g. JSON strings
 - Key-value model
  * Set of key-value pairs
 - Hierarchical key-value
  * Hierarchy of key-value pairs
 - Wide-column model
  * Key-value model with schema
 - Object model
  * Set of OOP-style objects

13.Give few examples of NoSQL databases and their pros and cons.
 - Redis
  * Ultra-fast in-memory data structures server
 - MongoDB
  * Mature and powerful JSON-document database
 - CouchDB
  * JSON-based document database with REST API
 - Cassandra
  * Distributed wide-column database