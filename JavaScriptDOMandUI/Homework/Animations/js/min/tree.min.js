function FamilyMember(e){this.name=e||null,this.sex=null,this.father=null,this.mother=null,this.relation=null,this.level=null,this.col=null,this.children=[]}function createNewMemberIfUnique(e,l){var n=null,r=0;for(r=l.length-1;r>=0;r--)if(l[r].name===e)return null;return n=new FamilyMember(e),l.push(n),null}function appendMemberToListIfNotNull(e,l){e||l.push(e)}function buildNodes(e){var l=[],n=null,r=0,t=0,i=null,u=null;for(r=e.length-1;r>=0;r--){n=e[r];for(i in n)if(n.hasOwnProperty(i))if("children"===i)for(t=n[i].length-1;t>=0;t--)u=n[i][t],createNewMemberIfUnique(u,l);else u=n[i],createNewMemberIfUnique(u,l)}return l}function getMember(e,l){var n=0;for(n=l.length-1;n>=0;n--)if(l[n].name===e)return l[n];return null}function createNewRelations(e,l){var n=null,r=null,t=null,i=0;for(n=getMember(l.father,e),n.relation=getMember(l.mother,e),n.sex="male",r=getMember(l.mother,e),r.relation=getMember(l.father,e),r.sex="female",i=l.children.length-1;i>=0;i--)t=getMember(l.children[i],e),t.father=n,t.mother=r,n.children.push(t),r.children.push(t);return null}function buildRelations(e,l){var n=0,r=null;for(n=l.length-1;n>=0;n--)r=l[n],createNewRelations(e,r)}function findElder(e){for(;null!==e.father||null!==e.relation.father;)e=e.father||e.relation.father;return e}function updateLevels(e){var l=0,n=0,r=[e],t=null;for(e.level=n,e.relation.level=n;r.length>0;)for(t=r.pop(),t.father&&(t.level=(t.father.level||t.mother.level)+1,t.relation&&(t.relation.level=t.level)),l=t.children.length-1;l>=0;l--)r.push(t.children[l])}