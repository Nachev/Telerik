// Generated by CoffeeScript 1.7.1
(function() {
  var Milk, assert, suite, vows;

  vows = require('vows');

  assert = require('assert');

  Milk = require('milk');

  suite = vows.describe('Milk.escape');

  suite.addBatch({
    "If the `partials` parameter is": {
      topic: function() {
        return function(partials) {
          return function(tmpl, data) {
            return Milk.render(tmpl, data, partials);
          };
        };
      },
      "a hash": {
        topic: function(parent) {
          return parent({
            partial_name: 'from hash'
          });
        },
        'lookups by name work properly': function(render) {
          var tmpl;
          tmpl = '[{{>partial_name}}]';
          return assert.equal(render(tmpl, {}), '[from hash]');
        },
        'lookups that fail throw an error': function(render) {
          var render_missing_partial;
          render_missing_partial = function() {
            return render('{{>miss}}', {});
          };
          return assert.throws(render_missing_partial, /^Unknown partial 'miss'!$/);
        }
      },
      "a function": {
        topic: function(parent) {
          return parent(function(name) {
            return name.split('').reverse().join('');
          });
        },
        'lookups are handled by that function': function(render) {
          var data, tmpl;
          tmpl = '[{{>partial_name}}]';
          data = {};
          return assert.equal(render(tmpl, data), '[eman_laitrap]');
        }
      }
    }
  });

  suite["export"](module);

}).call(this);

//# sourceMappingURL=partials_parameter.map
